const { SlashCommandBuilder, EmbedBuilder, ApplicationCommandOptionType } = require("discord.js");

module.exports = {
    name: "end-giveaway",
    description: "Manually end an ongoing giveaway.",
    options: [
        {
            name: "name",
            description: "The name of the giveaway to end.",
            type: ApplicationCommandOptionType.String,
            required: true,
        },
    ],

    callback: async (client, interaction) => {
        const giveawayName = interaction.options.getString("name");

        // –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
        // (–î–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π)
        // –ù–∞–ø—Ä–∏–º–µ—Ä:
        const activeGiveaway = client.giveaways?.find(g => g.name === giveawayName);
        const embedColor = userSettings ? userSettings.systemColor : '#303135'; 

        if (!activeGiveaway) {
            return interaction.reply({
                content: `‚ùå No active giveaway found with the name **${giveawayName}**.`,
                ephemeral: true,
            });
        }

        // –£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö
        client.giveaways = client.giveaways.filter(g => g.name !== giveawayName);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        const embed = new EmbedBuilder()
            .setTitle("üéâ Giveaway Ended!")
            .setDescription(`The giveaway **${giveawayName}** has been manually ended.`)
            .setColor(embedColor)
            .setTimestamp();

        interaction.reply({ embeds: [embed] });
    },
};
